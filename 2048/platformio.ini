; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
monitor_speed = 9600

; For actually building and deploying
[env:uno]
platform = atmelavr
board = uno
framework = arduino
extra_scripts = 
	pre:build_script.py
lib_deps = 
	arduino-libraries/LiquidCrystal@^1.0.7
	z3t0/IRremote@^4.4.0
test_build_src = yes
build_flags =
	-I"${platformio.include_dir}"
lib_ignore =
	ArduinoFake
	randomFake
	GraphicsFake
	InputFake
	CException
	CMock
; We do not test in this build
test_ignore = 
	test_desktop
	test_play_scene
	test_lcd_graphics

; For running tests on the local machine
[env:local_tests]
platform = native
build_flags =
	-D NATIVE_TEST
	-D CEXCEPTION_USE_CONFIG_FILE
	-I"${platformio.include_dir}"
	-I"${platformio.lib_dir}/Graphics/src"
	-I"${platformio.lib_dir}/Input/src"
	-I"${platformio.lib_dir}/ArduinoFake/src"
	-I"Unity/src"
build_src_filter = 
	+<**/*.cpp>
	+<**/*.c>
	-<**/random.cpp>
extra_scripts = 
	pre:build_script.py
test_build_src = yes
test_framework = unity
lib_ignore =
	Input
	Graphics
	IRremote
	LiquidCrystal
lib_deps =
	randomFake
	GraphicsFake
	InputFake
	CException
	CMock
test_ignore = 
	test_embedded
	test_lcd_graphics

; For running on the remote Arduino
[env:remote_tests]
platform = atmelavr
board = uno
framework = arduino
extra_scripts = 
	pre:build_script.py
lib_deps = 
	arduino-libraries/LiquidCrystal@^1.0.7
	CException
	CMock
test_build_src = yes
build_flags =
	-D EMBEDDED_TEST
	-D CEXCEPTION_USE_CONFIG_FILE
	-D CMOCK_MEM_SIZE=1000
	-I"${platformio.include_dir}"
	-I"${platformio.lib_dir}/Input/src"
	-I"${platformio.lib_dir}/CException/src"
lib_ignore =
	ArduinoFake
	randomFake
	GraphicsFake
	z3t0/IRremote@^4.4.0
	Input
test_ignore = 
	test_play_scene